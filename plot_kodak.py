import numpy as np
import pickle
import matplotlib.pyplot as plt
from scipy.spatial import ConvexHull
from varname import nameof

isMSE = False

def toConvex(x, y):
    xy = np.hstack((x[:,np.newaxis],y[:,np.newaxis]))
    hull = ConvexHull(xy)
    x, y = x[hull.vertices], y[hull.vertices]
    return x[1:],y[1:]

def mse2psnr(x):
    if isMSE == True:
        return x
    return 10*np.log10(255**2/x)

def acc_sum(a):
    for i in range(1,a.shape[0]):
        a[i, 1] += a[i-1, 1] 
    return a

def plot_benchmark():
    def load_n_plot(name):
        with open(name, 'rb') as f:
            tmp = pickle.load(f)
        plot(tmp)
    def filter1(a, b):
        xa, xb = [], []
        for i in range(len(a)):
            if a[i] < 0.3:
                xa.append(a[i])
                xb.append(b[i])
        return np.array(xa), np.array(xb)
    def plot(res):
        t = '/Users/alex/Desktop/proj/'
        for k in res.keys():
            xa, xb = filter1(res[k][:,0], res[k][:,1])
            plt.plot(xa, 10*np.log10(255**2/xb), label=k[len(t):])
    load_n_plot('/Users/alex/Desktop/proj/evl/evl_jpg_progressive_kodak.pkl')
    load_n_plot('/Users/alex/Desktop/proj/evl/evl_webp_kodak.pkl')
    # load_n_plot('/Users/alex/Desktop/proj/evl/evl_h264_kodak.pkl')
    load_n_plot('/Users/alex/Desktop/proj/evl/evl_bpg_kodak.pkl')
    load_n_plot('/Users/alex/Desktop/proj/evl/evl_jpg_kodak.pkl')
    with open('/Users/alex/Desktop/proj/evl/evl_h264_st_768x512.pkl','rb') as f:
        d = pickle.load(f)
    plt.plot(d['bpp'][40:], d['psnr'][40:], label='H264 768x512')
    # with open('/Users/alex/Desktop/proj/evl/evl_h264_st_256x256.pkl','rb') as f:
    #     d = pickle.load(f)
    # plt.plot(d['bpp'][40:], d['psnr'][40:], label='H264 256x256')

    with open('/Users/alex/Desktop/proj/evl/evl_h265_st_768x512.pkl','rb') as f:
        d = pickle.load(f)
    plt.plot(d['bpp'][40:], d['psnr'][40:], label='H265 768x512')
    # with open('/Users/alex/Desktop/proj/evl/evl_h265_st_256x256.pkl','rb') as f:
    #     d = pickle.load(f)
    # plt.plot(d['bpp'][40:], d['psnr'][40:], label='H265 256x256')

    
def plot(name, label, scatter=False):
    plt.plot(name[:,0], mse2psnr(name[:,1]), label=label)
    if scatter == True:
        plt.scatter(name[:,0], mse2psnr(name[:,1]))
        
# test-rdVQ-0228  1024
#    rdVQac
m2023_02_19_20_33_40 = np.array([0.004731814066569011, 730.023301, 0.03419812520345052, 393.269941]).reshape(-1,2)
m2023_02_25_21_56_39 = np.array([0.004812876383463542, 730.733846, 0.02873335944281684, 412.477543, 0.036557303534613714, 351.496232]).reshape(-1,2)
m2023_02_25_21_56_39_a = np.array([0.004812876383463542,730.733846,0.06370597415500218,370.593094,0.12485451168484157,204.938319]).reshape(-1, 2)
m2023_02_25_21_56_39_b = np.array([0.004812876383463542,730.733846,0.04125086466471354,392.977495,0.10526265038384332,218.325625]).reshape(-1, 2)
m2023_02_25_21_56_39_c = np.array([[0.004812876383463542, 730.733846], [0.04125086466471354, 392.977495], [0.16408295101589626, 168.133799]])
m2023_02_25_21_56_39_d = np.array([[0.004812876383463542, 730.733846], [0.04125086466471354, 392.977495], [0.16408295101589626, 168.133799]])
m2023_02_25_21_56_39_e = np.array([[0.004812876383463542, 730.733846], [0.06370597415500218, 370.593094], [0.16254329681396484, 170.675429]])
m2023_02_25_21_56_39_f = np.array([[0.004812876383463542, 730.733846], [0.0947321785820855, 363.293684], [0.5827045440673828, 68.894082]])
m2023_02_25_21_56_39_g = np.array([[0.004812876383463542, 730.733846], [0.06370597415500218, 370.593094], [0.1965086195203993, 156.162028]])
m2023_02_25_21_56_39_h = np.array([[0.0032749176025390625, 757.454385], [0.010652648078070747, 548.309354], [0.04315831926133898, 391.509454]])
m2023_02_25_21_56_39_i = np.array([[0.004812876383463542, 730.733846], [0.03375116984049479, 398.973549], [0.17480574713812935, 160.724518]])
m2023_02_25_21_56_39_j = np.array([[0.004812876383463542, 730.733846], [0.03375116984049479, 398.973549], [0.22246000501844618, 142.276135]])
m2023_02_25_21_56_39_j_s = np.array([[0.005079925060272217, 730.8622022569444], [0.0351470775074429, 397.7909081041666], [0.22505352820879146, 140.01395769444446]])



#    rdvqac1 512
m12023_02_27_19_52_54 = np.array([[0.003749529525756836, 746.624397], [0.026698006515502935, 404.248554], [0.04269843630981447, 310.566234]])
m2023_02_28_10_48_14 = np.array([[0.004812876383463542, 730.733846], [0.03375116984049479, 398.973549], [0.05831135643853082, 300.520282], [0.07609038882785374, 246.075598], [0.1898034413655599, 164.020892]])
m2023_02_28_10_48_14_a = np.array([[0.004812876383463542, 730.733846], [0.03375116984049479, 398.973549], [0.05831135643853082, 300.520282], [0.07609038882785374, 246.075598], [0.09220049116346571, 219.906935]])
m2023_02_28_10_48_14_b = np.array([[0.004812876383463542, 730.733846], [0.06370597415500218, 370.593094], [0.10102070702446832, 263.569049], [0.1470956802368164, 186.101939], [0.18529362148708767, 146.419482]])
m2023_02_28_10_48_14_c = np.array([[0.004812876383463542, 730.733846], [0.06370597415500218, 370.593094], [0.11006948682996961, 261.127502], [0.15558783213297525, 184.565642], [0.1936272515190972, 144.964786]])
m2023_02_28_10_48_14_d = np.array([[0.004766676161024306, 730.733846], [0.03367858462863498, 398.973549], [0.06633864508734809, 294.957508], [0.09069008297390407, 232.904514], [0.10683366987440321, 207.539714]])
m2023_02_28_10_48_14_e = np.array([[0.004769643147786458, 730.733846], [0.033593707614474826, 399.086234], [0.05821567111545139, 300.591529], [0.07603719499376085, 246.114621], [0.09353118472629124, 218.558889]])
m2023_02_28_10_48_14_d1 = np.array([[0.004768795437282986, 730.733846], [0.06358920203314887, 370.593094], [0.10988669925265843, 261.152376], [0.20196670956081814, 163.967726], [0.26413800981309676, 117.740009]])
m2023_02_28_10_48_14_f = np.array([[0.004768689473470052, 730.733846], [0.09461710188123915, 363.293684], [0.16800986395941842, 250.574383], [0.3031267589992947, 139.308346], [0.4247866736518012, 83.037594]])
m2023_02_28_10_48_14_g = np.array([[0.004769113328721788, 730.733846], [0.09460830688476562, 363.293684], [0.16799280378553602, 250.574383], [0.30263858371310765, 139.402282], [0.4243205388387044, 83.131237]])
m2023_02_28_18_10_26_h = np.array([[0.004767205980088975, 730.733846], [0.06358951992458767, 370.560909], [0.13474316067165798, 254.131413], [0.2239015367296007, 160.881619], [0.28044022454155815, 117.906778]])
m2023_02_28_18_10_26_i = np.array([[0.0047668880886501735, 730.733846], [0.03351815541585287, 399.46849], [0.06382815043131511, 301.038947], [0.0903811984592014, 233.441592], [0.10104613833957249, 213.605289]])
m2023_02_28_10_48_14_j = np.array([[0.004770914713541667, 730.733846], [0.02727190653483073, 425.077147], [0.032812012566460505, 376.706796], [0.04498185051812066, 320.014964], [0.11334398057725695, 232.427188]])
m2023_02_28_10_48_14_k = np.array([[0.004770490858289931, 730.733846], [0.032119539048936635, 401.95114], [0.043164041307237416, 333.459284], [0.05632262759738498, 281.857636], [0.05915355682373047, 274.237236]])

m2023_02_28_10_48_14_i1 = np.array([[0.00476784176296658, 730.733846], [0.06359015570746528, 370.593094], [0.10959762997097439, 261.198511], [0.1766087214152018, 169.538526], [0.2331178453233507, 124.867697]])
m2023_02_28_10_48_14_i2 = np.array([[0.004769113328721788, 730.733846], [0.06358612908257379, 370.593094], [0.13841014438205296, 255.744442], [0.2712056901719835, 144.887233], [0.3390393786960178, 99.782686]])
m2023_02_28_10_48_14_i3 = np.array([[0.004767417907714844, 730.733846], [0.06358920203314887, 370.593094], [0.1010225084092882, 263.205355], [0.14326424068874782, 184.852878], [0.17715867360432944, 147.613942]])
m2023_02_28_10_48_14_i4 = np.array([[0.004769113328721788, 730.733846], [0.03212865193684896, 401.95114], [0.04320451948377821, 333.370845], [0.057196617126464844, 279.80147], [0.06075276268853082, 269.716764]])
m2023_02_28_10_48_14_i5 = np.array([[0.004767523871527778, 730.733846], [0.02725431654188368, 425.077147], [0.03278393215603299, 376.706796], [0.04278204176161024, 328.233016], [0.04526890648735894, 320.598159]])
# 1024
m12023_03_01_18_52_39_a = np.array([[0.004904323154025608, 747.723501], [0.05306349860297309, 383.540421], [0.12228510114881727, 260.599287], [0.21962780422634548, 170.756019], [0.4280063841078017, 106.458754]])
m12023_03_01_18_52_39_b = np.array([[0.004770914713541667, 730.733846], [0.03459464179144965, 388.58588], [0.054408285352918834, 300.058071], [0.08126725090874566, 233.523625], [0.09834035237630208, 206.63611], [0.09834035237630208+0.02521271175,188.51]])
m12023_03_01_18_52_39_badaptive_s = np.array([[0.004482163323296441, 732.2343885347219], [0.03214952680799696, 398.275477902778], [0.05157820383707682, 316.1738661180556], [0.07716560363769531, 254.71146145833325], [0.10323185390896267, 225.67723630555568]])
m12023_03_01_18_52_39_b_s = np.array([[0.00496175554063585, 730.2302647013886], [0.03584639231363932, 386.8995657569445], [0.059535238477918834, 294.5059314375], [0.09171485900878906, 226.93706833333334], [0.12104871537950304, 195.18295161111106]])
m12023_03_01_18_52_39_c = np.array([[0.004770596822102864, 730.733846], [0.06589614020453559, 366.819092], [0.16191832224527994, 236.528132], [0.29440297020806205, 137.061969], [0.4163151846991645, 82.786546]])
m12023_03_01_18_52_39_d = np.array([[0.0047698550754123265, 730.733846], [0.045511881510416664, 374.650073], [0.08656787872314453, 265.732788], [0.1328274408976237, 191.184755], [0.15965482923719618, 159.125338]])
m12023_03_01_18_52_39_e_s = np.array([[0.0050712161593967015, 730.1496396388886], [0.04542424943712023, 377.93035475000005], [0.08302254146999782, 273.78699911805546], [0.13222122192382812, 199.79854622916662], [0.17332235972086588, 164.80447259722234]])


# test-rdVQ-0302 2048
m2023_03_02_15_39_30_a = np.array([[0.005602200826009114, 735.405337], [0.03822464413113064, 405.822096], [0.05758084191216363, 327.714698], [0.1589882108900282, 200.769734], [0.1903471416897244, 168.124073]]) #g7 g8 lambda=5000 others 1e5
m2023_03_02_15_39_30_b = np.array([[0.005590968661838108, 736.436334], [0.03863758511013455, 405.211185], [0.05806022220187717, 327.952144], [0.08117940690782335, 262.955103], [0.0929777357313368, 242.20326]]) # all lambda =1e5
m2023_03_02_15_39_30__s = np.array([[0.005595589125597918, 738.6080210347222], [0.033435558095390415, 422.16549972222225], [0.05049286801138042, 350.658903361111], [0.07118806426907763, 292.08532358333315], [0.08074296624572189, 276.93098837499974]])
m2023_03_02_15_39_30_c = np.array([[0.005564265780978733, 739.551464], [0.04681438869900174, 399.623256], [0.09778224097357856, 301.06389], [0.19409476386176217, 199.09237], [0.36804283989800346, 132.940902]])
m2023_03_02_15_39_30_d = np.array([[0.005576133728027344, 739.088259], [0.032046000162760414, 432.962814], [0.06322458055284289, 352.055371], [0.12786589728461373, 250.123273], [0.2320902082655165, 182.871965]])
# 2048
m2023_03_18_24_33_33 = np.array([[0.0049550798204210066, 728.073348], [0.03194639417860243, 397.644531],
                                  [0.05902809566921658, 289.792297],
                                #  [0.06403573354085286, 284.502067],[0.0649470223320855, 281.633866], 
                                 [0.0806931389702691, 231.719757], [0.08176326751708984, 229.302575],
                                #  [0.14598941802978516, 188.447332], [0.15208477444118923, 181.442374]
                                [0.10218694474962023, 197.07225],
                                [0.10218694474962023+47134./144/256**2,191.09880],
                                [0.10218694474962023+(47134+168578)/144/256**2,173.98647],
                                [0.10218694474962023+(47134+168578+162098)/144/256**2,159.68832],
                                [0.10218694474962023+(47134+168578+162098+69056)/144/256**2,154.58176],
                                # [0.10218694474962023+(36280+94960)/144/256**2,180.97437],
                                # [0.10218694474962023+(36280+94960+96678)/144/256**2,170.99066],
                                # [0.10218694474962023+(36280+94960+96678+284050)/144/256**2,151.83275],
                                # [0.10218694474962023+0.04697095435, 160],
                                # [0.10218694474962023+0.09385775862, 140],
                                                               ])

m2023_03_18_24_33_33_0413 = np.array([[0.10218694474962023+43843/144/256**2,190.89655],
                                [0.10218694474962023+(43843+162566)/144/256**2,173.82326],
                                [0.10218694474962023+(43843+162566+182521)/144/256**2,158.42311],
                                [0.10218694474962023+(43843+162566+182521+28972)/144/256**2,156.22522]])


m2023_03_18_24_33_33_old = np.array([[0.0049550798204210066, 728.073348], [0.03194639417860243, 397.644531],
                                  [0.05902809566921658, 289.792297],
                                #  [0.06403573354085286, 284.502067],[0.0649470223320855, 281.633866], 
                                 [0.0806931389702691, 231.719757], [0.08176326751708984, 229.302575],
                                #  [0.14598941802978516, 188.447332], [0.15208477444118923, 181.442374]
                                [0.10218694474962023, 197.07225],
                                [0.10218694474962023+36280./144/256**2,192.30641557852405],
                                [0.10218694474962023+(36280+94960)/144/256**2,180.97437],
                                [0.10218694474962023+(36280+94960+96678)/144/256**2,170.99066],
                                [0.10218694474962023+(36280+94960+96678+284050)/144/256**2,151.83275],

                                                                 ])


m2023_03_18_24_33_33_in_train = np.array([[0.10218694474962023+80415/144/256**2,167.37454],
                                        [0.10218694474962023+(80415+213843)/144/256**2,142.05295],
                                        [0.10218694474962023+(80415+213843+193461)/144/256**2,125.63857],
                                        [0.10218694474962023+(80415+213843+193461+13401)/144/256**2,124.63257]])


m2023_03_26_18_39_23 = np.array([[0.004701084560818142, 733.325015], [0.03544320000542535, 388.126147], [0.05912070804172092, 293.91995], [0.09045261806911892, 222.723051], [0.1109151840209961, 194.360768]])
m2023_03_18_24_33_33a = np.array([[0.004958788553873698, 728.073348], [0.037658373514811196, 392.63955], [0.06667719946967231, 285.617549], [0.10756058163113064, 206.797572], [0.13173993428548178, 174.183727]])
bpg_m2023_03_18_24_33_33 = np.array([[1.08713468e-01,1.87602857e+02],[1.09491666e-01,1.86473752e+02],[1.11311701e-01,1.83701471e+02],[1.14998394e-01,1.78739586e+02],[1.22816828e-01,1.70137168e+02],[1.35397699e-01,1.58071219e+02],[1.55743599e-01,1.42276361e+02],[1.80702739e-01,1.26649871e+02],[2.10669306e-01,1.11383462e+02],[2.42683940e-01,9.89000498e+01],[2.81022496e-01,8.63098211e+01]])#[3.21539667e-01,7.65135800e+01],[3.66794692e-01,6.68128514e+01],[4.16629050e-01,5.91034163e+01],[4.74395434e-01,5.11973872e+01],[5.37217564e-01,4.41640259e+01],[6.09067811e-01,3.80040856e+01],[6.85449918e-01,3.27155217e+01],[7.59271940e-01,2.90866308e+01],[8.47266833e-01,2.49608456e+01],[9.40195402e-01,2.15150445e+01],[1.03797457e+00,1.86604124e+01]
jpg_m2023_03_18_24_33_33 = np.array([#[1.09595966,41.15018304],[1.08077378,41.92434841],[1.06505299,42.67618285],[1.05325201,43.40315406],[1.04420185,44.07435385],[1.03128274,44.62696634],[1.0112683,,45.58298351],[1.00713317,46.05042214],[1.00311926,46.50595347],[0.98479684,47.47487764],[0.97350025,47.98152147],[0.96621418,48.60693077],[0.95077229,49.64596392],[0.94209851,50.17898747],[0.9254427,,51.44124307],[0.91529221,52.31021666],[0.90628952,52.91527052],[0.88747205,54.28295566],[0.88083108,54.94475746],[0.87000497,55.87289475],[0.8527956,,57.07456568],[0.84511704,57.84122082],[0.83083057,59.26988093],[0.81384246,60.59397263],[0.80460072,61.62395739],[0.78902488,63.02694254],[0.77544795,64.42837362],[0.76230335,65.96990024],[0.74867895,67.77830551],[0.73624473,69.16205332],[0.72021876,70.93040502],[0.70585346,72.69708679],[0.6907532,,74.56902529],[0.67657439,76.31665318],[0.66877037,78.99196681],[0.6528563,,81.22557605],[0.63736608,83.54216335],[0.61992105,86.43019217],[0.61211448,89.38338138],[0.59664292,92.17595439],[0.57870197,95.62168072],[0.56081104,99.40763491],[0.54249965,103.49444354],
                                     [0.52360503,108.05781258],[0.50592094,112.72732664],[0.48506302,118.42088018],[0.46546819,124.41349821],[0.4447705,131.19980621],[0.42360825,138.95476617],[0.40231207,147.35129356],[0.38172542,156.61656535],[0.36130831,166.86893668],[0.34248829,176.48470949],[0.32780764,184.35190275],[0.32055632,188.15882061],[0.31912284,188.67512512],[0.31910589,188.66286758]])
webp_m2023_03_18_24_33_33 = np.array([
                                    # [1.09595288,23.28373803],[1.08406289,23.61815428],[1.06977558,24.12009197],[1.05586296,24.65081105],[1.04454602,25.03094811],[1.02938557,25.56627312],[1.01902654,25.92281098],[1.00736205,26.40238317],[0.9941988,26.93263389],[0.98361598,27.3276287,],[0.97227361,27.83071147],[0.95741325,28.45656593],[0.94816981,28.81946062],[0.93734794,29.36747463],[0.92472723,29.92428652],[0.9153685,30.3590676,],[0.9023375,30.99830317],[0.89201238,31.54504048],[0.88242647,32.0260594,],[0.87065517,32.68750396],[0.86015034,33.27108426],[0.85109001,33.75278632],[0.83915424,34.32229017],[0.82890881,34.96382918],[0.81960265,35.49964435],[0.8087706,36.12887075],[0.79802333,36.83817747],[0.78564337,37.70013149],[0.77723577,38.17175017],[0.7659341,39.06629181],[0.75373893,39.94329728],[0.74252711,40.84070474],[0.73087618,41.72980722],[0.72133435,42.424077,],[0.71209431,43.31694342],[0.69931083,44.43859235],[0.68745136,45.50976319],[0.67627345,46.56544541],[0.66526,47.67328178],[0.65529262,48.52838689],[0.64384174,49.72569162],[0.63276895,50.90471526],[0.62066534,52.18505743],[0.60865498,53.47110935],[0.59664122,54.78331506],[0.58539041,56.17942361],[0.57436,57.60155664],[0.56218688,59.09403769],[0.55120564,60.51382881],[0.53937838,62.08408296],[0.52671697,63.68731417],[0.51567809,65.26336864],[0.50396442,66.91049025],[0.49255255,68.65259654],[0.48016071,70.63478,],[0.4686861,72.53629098],[0.4569487,74.41435221],[0.44486713,76.40300617],[0.43276013,78.75554576],[0.41938665,81.18272739],[0.40772385,83.49460828],[0.39341958,86.39696785],[0.38175,88.75256909],[0.36837313,91.85840063],[0.35398748,95.41373737],[0.33972899,98.91485786],
                                    [0.3259876,102.49782163],[0.31098143,106.63107847],[0.29593118,110.9481637,],[0.27951781,116.03091844],[0.26118861,122.28286711],[0.24017726,130.04408709],[0.21485106,140.35064514]])


m2023_03_13_18_09_11 = np.array([[0.004855155944824219, 728.091885], [0.035783343844943576, 382.87908], 
                                 [0.05778747134738498, 291.765114], 
                                 [0.0825251473320855, 235.575416], 
                                 [0.10944620768229167, 194.019267]])

m2023_03_14_23_44_39  = np.array([[0.0048625734117296, 728.249285], [0.052718798319498696, 385.969742], [0.05546802944607205, 382.774563]])


# m2023_03_13_22_26_55 = np.array([[0.004963450961642795, 728.035231], [0.038096110026041664, 387.455554], [0.0663346184624566, 292.706156]])
if __name__ == "__main__":
    isMSE = False
    plt.figure(figsize=(12,8))
    plot_benchmark()
    # plot(m2023_02_28_10_48_14_a, 'm2023_02_28_10_48_14_a', True)
    # plot(m2023_02_28_10_48_14_i3, 'm2023_02_28_18_10_26_i3', True) # 30000 1
    plot(m2023_03_18_24_33_33, 'm2023_03_18_24_33_33', True)
    # plot(m2023_03_18_24_33_33_old, 'm2023_03_18_24_33_33_old', True)

    plot(m2023_03_18_24_33_33_0413, 'm2023_03_18_24_33_33_0413', True)
    # plot(m2023_03_13_18_09_11, 'm2023_03_13_18_09_11', True)

    plot(m2023_03_18_24_33_33_in_train, 'm2023_03_18_24_33_33_in_train', True)
    # plot(m2023_03_18_24_33_33a, 'm2023_03_18_24_33_33a', True)
    plot(bpg_m2023_03_18_24_33_33, 'bpg_m2023_03_18_24_33_33', False)
    # plot(webp_m2023_03_18_24_33_33, 'webp_m2023_03_18_24_33_33', False)
    # plot(jpg_m2023_03_18_24_33_33, 'jpg_m2023_03_18_24_33_33', True)
    # plot(m2023_02_28_10_48_14_i1, 'm2023_02_28_18_10_26_i1', True) # 30000 0.95
    # plot(m2023_02_28_10_48_14_i2, 'm2023_02_28_18_10_26_i2', True) # 30000 0.9
    # plot(m2023_02_28_10_48_14_i4, 'm2023_02_28_18_10_26_i4', True) # 30000 1.2
    # plot(m2023_02_28_10_48_14_i5, 'm2023_02_28_18_10_26_i5', True) # 30000 1.3

    # # plot(m2023_02_19_20_33_40, 'm2023_02_19_20_33_40')

    # # plot(m2023_02_25_21_56_39, 'm2023_02_25_21_56_39')
    # # plot(m2023_02_25_21_56_39_a, 'm2023_02_25_21_56_39_a')
    # # plot(m2023_02_25_21_56_39_b, 'm2023_02_25_21_56_39_b')
    # # plot(m2023_02_25_21_56_39_j, 'm2023_02_25_21_56_39_j')
    # # plot(m2023_02_25_21_56_39_j_s, 'm2023_02_25_21_56_39_j_s')

    # # plot(m2023_02_28_10_48_14, 'm2023_02_28_10_48_14')
    
    # plot(m2023_02_28_10_48_14_b, 'm2023_02_28_10_48_14_b', True)
    # plot(m2023_02_28_10_48_14_d, 'm2023_02_28_10_48_14_d', True)
    # plot(m2023_02_28_10_48_14_e, 'm2023_02_28_10_48_14_e', True)
    # plot(m2023_02_28_10_48_14_f, 'm2023_02_28_10_48_14_f', True)
    # plot(m2023_02_28_10_48_14_j, 'm2023_02_28_10_48_14_j', True)
    # plot(m2023_02_28_10_48_14_k, 'm2023_02_28_10_48_14_k', True) # 20000, 1.3
    # # plot(m2023_02_28_18_10_26_h, 'm2023_02_28_18_10_26_h', True)
    # plot(m2023_02_28_10_48_14_d1, 'm2023_02_28_10_48_14_d1', True)

    # # plot(m2023_02_28_18_10_26_h, 'm2023_02_28_18_10_26_h', True)

    # plot(m12023_02_27_19_52_54, 'm12023_02_27_19_52_54', True)

    # # plot(m2023_03_02_15_39_30_a, 'm2023_03_02_15_39_30_a', True)
    # plot(m2023_03_02_15_39_30_b, 'm2023_03_02_15_39_30_b', True)

    # plot(m12023_03_01_18_52_39_b, 'm12023_03_01_18_52_39_b', True)  # all 10000, 1.3

    # plot(m12023_03_01_18_52_39_e_s, 'm12023_03_01_18_52_39_e_s', True)  # all 10000, 1.3 var[i]/var
    # plot(m12023_03_01_18_52_39_d, 'm12023_03_01_18_52_39_d', True) # all 10000, 1.2

    # plot(m12023_03_01_18_52_39_badaptive_s, 'm12023_03_01_18_52_39_badaptive_s', True)
    # plot(m12023_03_01_18_52_39_b_s, 'm12023_03_01_18_52_39_b_s', True)
    # # plot(m12023_03_01_18_52_39_a, 'm12023_03_01_18_52_39_a', True)   
    # # plot(m2023_03_02_15_39_30_c, 'm2023_03_02_15_39_30_c', True)    
# need to have image wise lambda std/mean std
    plt.grid()
    plt.xlabel('BPP',fontsize=16)
    if isMSE == True:
        plt.ylabel('MSE',fontsize=16)
    else:
        plt.ylabel('PSNR',fontsize=16)
    plt.legend(fontsize=8, loc=4)
    plt.show()

